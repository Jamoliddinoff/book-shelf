{"ast":null,"code":"import axios from 'axios';\nimport { BASE_URL, DEFAULT_HEADERS } from '../constants';\nimport { store } from '../store';\nimport md5 from 'md5';\nimport { logOute } from \"../store/loginSlice\";\nconst httpClient = axios.create({\n  baseURL: BASE_URL\n});\nhttpClient.interceptors.response.use(response => {\n  return response;\n}, error => {\n  console.log('error ====>', error);\n  // store.dispatch(setAlertAction({ type: 'error', message: error?.message }));\n  let status = error.response && error.response.status || 0;\n  if (status === 401) {\n    //clear access token\n    console.log('status ====>', error);\n    store.dispatch(logOute());\n\n    // RootNavigation.navigate(NAVIGATORS.LOGIN);\n    return Promise.reject('login or password invalid');\n  }\n  return Promise.reject(error);\n});\nhttpClient.interceptors.request.use(async config => {\n  let _access_token;\n  // try {\n  //     let token = await AsyncStorage.getItem('@token');\n  //     // const { access_token } = JSON.parse(token) || null;\n  //     _access_token = (await JSON.parse(token)) || null;\n  // } catch (error) {\n  //     console.log(error);\n  //     _access_token = null;\n  // }\n  console.log('config-', config);\n  const user = store.getState().auth.user;\n  if (user) {\n    const sign = config.method.toLocaleUpperCase() + config.url + (config.data ? JSON.stringify(config.data) : '') + user.secret;\n    console.log('signnnnn', sign);\n    config.headers = Object.assign(config.headers, {\n      'Content-Type': 'application/json',\n      Key: user.key,\n      Sign: md5(sign).toString()\n    });\n    return config;\n  } else {\n    config.headers = Object.assign(config.headers, {\n      'Content-Type': 'application/json'\n    });\n    return config;\n  }\n});\nexport const httpGet = (url, params) => httpClient(url, {\n  method: 'get',\n  ...params\n});\nexport const httpPost = (url, params) => httpClient(url, {\n  method: 'post',\n  ...params\n});\nexport const httpPut = (url, params) => httpClient(url, {\n  method: 'put',\n  ...params\n});\nexport const httpPatch = (url, params) => httpClient(url, {\n  method: 'patch',\n  ...params\n});\nexport const httpDelete = (url, params) => httpClient(url, {\n  method: 'delete',\n  ...params\n});","map":{"version":3,"names":["axios","BASE_URL","DEFAULT_HEADERS","store","md5","logOute","httpClient","create","baseURL","interceptors","response","use","error","console","log","status","dispatch","Promise","reject","request","config","_access_token","user","getState","auth","sign","method","toLocaleUpperCase","url","data","JSON","stringify","secret","headers","Object","assign","Key","key","Sign","toString","httpGet","params","httpPost","httpPut","httpPatch","httpDelete"],"sources":["/Users/macos/MyFolders/projects/smart-base-task/src/api/index.js"],"sourcesContent":["import axios from 'axios';\nimport { BASE_URL, DEFAULT_HEADERS } from '../constants';\nimport { store } from '../store';\nimport md5 from 'md5';\nimport {logOute} from \"../store/loginSlice\";\n\nconst httpClient = axios.create({\n    baseURL: BASE_URL,\n});\n\nhttpClient.interceptors.response.use(\n    (response) => {\n        return response;\n    },\n    (error) => {\n        console.log('error ====>', error);\n        // store.dispatch(setAlertAction({ type: 'error', message: error?.message }));\n        let status = (error.response && error.response.status) || 0;\n        if (status === 401) {\n            //clear access token\n            console.log('status ====>', error);\n            store.dispatch(logOute());\n\n            // RootNavigation.navigate(NAVIGATORS.LOGIN);\n            return Promise.reject('login or password invalid');\n        }\n        return Promise.reject(error);\n    }\n);\n\nhttpClient.interceptors.request.use(async (config) => {\n    let _access_token;\n    // try {\n    //     let token = await AsyncStorage.getItem('@token');\n    //     // const { access_token } = JSON.parse(token) || null;\n    //     _access_token = (await JSON.parse(token)) || null;\n    // } catch (error) {\n    //     console.log(error);\n    //     _access_token = null;\n    // }\n    console.log('config-',config)\n    const user = store.getState().auth.user;\n\n    if (user) {\n        const sign = config.method.toLocaleUpperCase()+config.url+(config.data?JSON.stringify(config.data):'')+user.secret\n        console.log('signnnnn',sign)\n        config.headers = Object.assign(config.headers, {\n           'Content-Type': 'application/json',\n            Key: user.key,\n            Sign: md5(sign).toString(),\n        });\n        return config;\n    } else {\n        config.headers = Object.assign(config.headers, {\n            'Content-Type': 'application/json',\n        })\n        return config;\n    }\n});\n\nexport const httpGet = (url, params) => httpClient(url, { method: 'get', ...params });\n\nexport const httpPost = (url, params) => httpClient(url, { method: 'post', ...params });\n\nexport const httpPut = (url, params) => httpClient(url, { method: 'put', ...params });\n\nexport const httpPatch = (url, params) => httpClient(url, { method: 'patch', ...params });\n\nexport const httpDelete = (url, params) => httpClient(url, { method: 'delete', ...params });\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}