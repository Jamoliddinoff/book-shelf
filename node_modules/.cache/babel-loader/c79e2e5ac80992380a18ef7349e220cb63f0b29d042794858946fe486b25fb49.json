{"ast":null,"code":"var _jsxFileName = \"/Users/macos/MyFolders/projects/smart-base-task/src/companents/ViewVideo/index.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Container from \"../Container\";\nimport styled from \"styled-components\";\nimport Text from \"../Text\";\nimport { useTranslation } from \"react-i18next\";\nimport useScreenSize from \"../../hooks/useScreenSize\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ViewVideo = ({\n  url\n}) => {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  const {\n    width\n  } = useScreenSize();\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'justify-center',\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        size: width > 700 ? 32 : 20,\n        weight: 600,\n        color: '#000',\n        children: t(\"videoTitle\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(VideoWrapper, {\n      children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n        width: \"100%\",\n        height: \"480\",\n        src: `${url}`,\n        frameBorder: \"0\",\n        allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n        allowFullScreen: true,\n        title: \"Embedded youtube\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n_s(ViewVideo, \"tGI7gwxFKAm07qcRMFRRlzHWj5c=\", false, function () {\n  return [useTranslation, useScreenSize];\n});\n_c = ViewVideo;\nconst VideoWrapper = styled.div`\n  border-radius: 12px;\n  overflow: hidden;\n  margin: 20px 0px;\n`;\n_c2 = VideoWrapper;\nexport default ViewVideo;\nvar _c, _c2;\n$RefreshReg$(_c, \"ViewVideo\");\n$RefreshReg$(_c2, \"VideoWrapper\");","map":{"version":3,"names":["React","Container","styled","Text","useTranslation","useScreenSize","jsxDEV","_jsxDEV","ViewVideo","url","_s","t","width","children","className","size","weight","color","fileName","_jsxFileName","lineNumber","columnNumber","VideoWrapper","height","src","frameBorder","allow","allowFullScreen","title","_c","div","_c2","$RefreshReg$"],"sources":["/Users/macos/MyFolders/projects/smart-base-task/src/companents/ViewVideo/index.js"],"sourcesContent":["import React from 'react';\nimport Container from \"../Container\";\nimport styled from \"styled-components\";\nimport Text from \"../Text\";\nimport {useTranslation} from \"react-i18next\";\nimport useScreenSize from \"../../hooks/useScreenSize\";\n\nconst ViewVideo = ({url}) => {\n    const {t} = useTranslation();\n    const {width} = useScreenSize();\n\n    return (\n        <Container>\n            <div className={'justify-center'}>\n                <Text size={width > 700 ? 32 : 20} weight={600} color={'#000'}>{t(\"videoTitle\")}</Text>\n            </div>\n            <VideoWrapper>\n                <iframe\n                    width=\"100%\"\n                    height=\"480\"\n                    src={`${url}`}\n                    frameBorder=\"0\"\n                    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                    allowFullScreen\n                    title=\"Embedded youtube\"\n                />\n            </VideoWrapper>\n\n        </Container>\n    );\n};\n\nconst VideoWrapper = styled.div`\n  border-radius: 12px;\n  overflow: hidden;\n  margin: 20px 0px;\n`;\n\nexport default ViewVideo;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,cAAc;AACpC,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,IAAI,MAAM,SAAS;AAC1B,SAAQC,cAAc,QAAO,eAAe;AAC5C,OAAOC,aAAa,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,SAAS,GAAGA,CAAC;EAACC;AAAG,CAAC,KAAK;EAAAC,EAAA;EACzB,MAAM;IAACC;EAAC,CAAC,GAAGP,cAAc,CAAC,CAAC;EAC5B,MAAM;IAACQ;EAAK,CAAC,GAAGP,aAAa,CAAC,CAAC;EAE/B,oBACIE,OAAA,CAACN,SAAS;IAAAY,QAAA,gBACNN,OAAA;MAAKO,SAAS,EAAE,gBAAiB;MAAAD,QAAA,eAC7BN,OAAA,CAACJ,IAAI;QAACY,IAAI,EAAEH,KAAK,GAAG,GAAG,GAAG,EAAE,GAAG,EAAG;QAACI,MAAM,EAAE,GAAI;QAACC,KAAK,EAAE,MAAO;QAAAJ,QAAA,EAAEF,CAAC,CAAC,YAAY;MAAC;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtF,CAAC,eACNd,OAAA,CAACe,YAAY;MAAAT,QAAA,eACTN,OAAA;QACIK,KAAK,EAAC,MAAM;QACZW,MAAM,EAAC,KAAK;QACZC,GAAG,EAAG,GAAEf,GAAI,EAAE;QACdgB,WAAW,EAAC,GAAG;QACfC,KAAK,EAAC,0FAA0F;QAChGC,eAAe;QACfC,KAAK,EAAC;MAAkB;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAER,CAAC;AAEpB,CAAC;AAACX,EAAA,CAvBIF,SAAS;EAAA,QACCJ,cAAc,EACVC,aAAa;AAAA;AAAAwB,EAAA,GAF3BrB,SAAS;AAyBf,MAAMc,YAAY,GAAGpB,MAAM,CAAC4B,GAAI;AAChC;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAJIT,YAAY;AAMlB,eAAed,SAAS;AAAC,IAAAqB,EAAA,EAAAE,GAAA;AAAAC,YAAA,CAAAH,EAAA;AAAAG,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}