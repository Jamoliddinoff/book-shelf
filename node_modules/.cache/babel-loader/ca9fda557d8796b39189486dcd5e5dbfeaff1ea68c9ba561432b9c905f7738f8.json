{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nexport default function useScreenSize() {\n  _s();\n  let [width, setWidth] = useState(window.innerWidth);\n  useEffect(() => {\n    window.addEventListener(\"resize\", () => {\n      setWidth(window.innerWidth);\n    });\n    return () => {\n      window.removeEventListener(\"resize\", () => {\n        setWidth(window.innerWidth);\n      });\n    };\n  }, []);\n  return {\n    width\n  };\n}\n_s(useScreenSize, \"r8oOeeXAOcn13mf1U3R3bkb6W9k=\");","map":{"version":3,"names":["useEffect","useState","useScreenSize","_s","width","setWidth","window","innerWidth","addEventListener","removeEventListener"],"sources":["/Users/macos/MyFolders/projects/smart-base-task/src/hooks/useScreenSize.js"],"sourcesContent":["import { useEffect, useState} from \"react\";\n\nexport default function useScreenSize () {\n    let [width,setWidth] = useState(window.innerWidth);\n\n    useEffect(() => {\n        window.addEventListener(\"resize\", () => {\n            setWidth(window.innerWidth)\n        });\n        return () => {\n            window.removeEventListener(\"resize\", () => {\n                setWidth(window.innerWidth)\n            })\n        }\n    }, []);\n\n    return {width};\n}\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAE1C,eAAe,SAASC,aAAaA,CAAA,EAAI;EAAAC,EAAA;EACrC,IAAI,CAACC,KAAK,EAACC,QAAQ,CAAC,GAAGJ,QAAQ,CAACK,MAAM,CAACC,UAAU,CAAC;EAElDP,SAAS,CAAC,MAAM;IACZM,MAAM,CAACE,gBAAgB,CAAC,QAAQ,EAAE,MAAM;MACpCH,QAAQ,CAACC,MAAM,CAACC,UAAU,CAAC;IAC/B,CAAC,CAAC;IACF,OAAO,MAAM;MACTD,MAAM,CAACG,mBAAmB,CAAC,QAAQ,EAAE,MAAM;QACvCJ,QAAQ,CAACC,MAAM,CAACC,UAAU,CAAC;MAC/B,CAAC,CAAC;IACN,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAACH;EAAK,CAAC;AAClB;AAACD,EAAA,CAfuBD,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}