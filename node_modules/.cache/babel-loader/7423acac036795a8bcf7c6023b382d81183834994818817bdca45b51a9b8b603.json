{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/macos/MyFolders/projects/smart-base-task/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject;import React from'react';import Container from\"../Container\";import{YMaps,Map,Placemark,FullscreenControl,TypeSelector,ZoomControl}from'react-yandex-maps';import styled from\"styled-components\";import Text from\"../Text\";import{useTranslation}from\"react-i18next\";import useScreenSize from\"../../hooks/useScreenSize\";import{jsx as _jsx}from\"react/jsx-runtime\";var CountryInMap=function CountryInMap(_ref){var country=_ref.country;var _useTranslation=useTranslation(),t=_useTranslation.t;var _useScreenSize=useScreenSize(),width=_useScreenSize.width;return/*#__PURE__*/_jsx(Container,{children:/*#__PURE__*/_jsx(\"div\",{className:'justify-center',children:/*#__PURE__*/_jsx(Text,{size:width>700?32:20,weight:600,color:'#000',children:t(\"mapTitle\")})})});};var MapWrapper=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  width: 100%;\\n  height: 400px;\\n  border-radius: 12px;\\n  margin: 20px 0px;\\n  overflow: hidden;\\n  position: relative;\\n  .ymaps-2-1-79-map{\\n    &:nth-child(1){\\n      position: absolute;\\n      top:-0px\\n    }\\n  }\\n\"])));export default CountryInMap;","map":{"version":3,"names":["React","Container","YMaps","Map","Placemark","FullscreenControl","TypeSelector","ZoomControl","styled","Text","useTranslation","useScreenSize","jsx","_jsx","CountryInMap","_ref","country","_useTranslation","t","_useScreenSize","width","children","className","size","weight","color","MapWrapper","div","_templateObject","_taggedTemplateLiteral"],"sources":["/Users/macos/MyFolders/projects/smart-base-task/src/companents/CountrInMap/index.js"],"sourcesContent":["import React from 'react';\nimport Container from \"../Container\";\nimport { YMaps, Map, Placemark, FullscreenControl, TypeSelector, ZoomControl } from 'react-yandex-maps';\nimport styled from \"styled-components\";\nimport Text from \"../Text\";\nimport {useTranslation} from \"react-i18next\";\nimport useScreenSize from \"../../hooks/useScreenSize\";\n\nconst CountryInMap = ({country}) => {\n    const {t} = useTranslation();\n    const {width} = useScreenSize();\n    return (\n        <Container>\n            <div className={'justify-center'}>\n                <Text size={width > 700 ? 32 : 20} weight={600} color={'#000'}>{t(\"mapTitle\")}</Text>\n            </div>\n            {/*<YMaps query={{ apikey: '0cc32749-ed90-4958-bde7-69d38b459f7b' }}>*/}\n            {/*    <MapWrapper>*/}\n            {/*        <Map*/}\n            {/*            width={'100%'}*/}\n            {/*            height={400}*/}\n            {/*            defaultState={{ center: [country.address.latitude, country.address.longitude], zoom: 11 }}*/}\n            {/*        >*/}\n            {/*            <Placemark*/}\n            {/*                modules={['geoObject.addon.balloon']}*/}\n            {/*                geometry={[country.address.latitude, country.address.longitude]}*/}\n            {/*                properties={{*/}\n            {/*                    balloonContentBody:*/}\n            {/*                        ` <img width=\"200\" src=${country.mainPic} alt=\"picture\"/>*/}\n            {/*                          <p>${country.capital}</p>*/}\n            {/*                        `*/}\n            {/*                }}*/}\n            {/*            />*/}\n            {/*            <FullscreenControl />*/}\n            {/*            <TypeSelector options={{ float: 'left' }} />*/}\n            {/*            <ZoomControl options={{ float: 'right' }} />*/}\n            {/*        </Map>*/}\n            {/*    </MapWrapper>*/}\n            {/*</YMaps>*/}\n        </Container>\n    );\n};\nconst MapWrapper = styled.div`\n  width: 100%;\n  height: 400px;\n  border-radius: 12px;\n  margin: 20px 0px;\n  overflow: hidden;\n  position: relative;\n  .ymaps-2-1-79-map{\n    &:nth-child(1){\n      position: absolute;\n      top:-0px\n    }\n  }\n`;\n\nexport default CountryInMap;\n"],"mappings":"yKAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,SAAS,KAAM,cAAc,CACpC,OAASC,KAAK,CAAEC,GAAG,CAAEC,SAAS,CAAEC,iBAAiB,CAAEC,YAAY,CAAEC,WAAW,KAAQ,mBAAmB,CACvG,MAAO,CAAAC,MAAM,KAAM,mBAAmB,CACtC,MAAO,CAAAC,IAAI,KAAM,SAAS,CAC1B,OAAQC,cAAc,KAAO,eAAe,CAC5C,MAAO,CAAAC,aAAa,KAAM,2BAA2B,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEtD,GAAM,CAAAC,YAAY,CAAG,QAAf,CAAAA,YAAYA,CAAAC,IAAA,CAAkB,IAAb,CAAAC,OAAO,CAAAD,IAAA,CAAPC,OAAO,CAC1B,IAAAC,eAAA,CAAYP,cAAc,CAAC,CAAC,CAArBQ,CAAC,CAAAD,eAAA,CAADC,CAAC,CACR,IAAAC,cAAA,CAAgBR,aAAa,CAAC,CAAC,CAAxBS,KAAK,CAAAD,cAAA,CAALC,KAAK,CACZ,mBACIP,IAAA,CAACZ,SAAS,EAAAoB,QAAA,cACNR,IAAA,QAAKS,SAAS,CAAE,gBAAiB,CAAAD,QAAA,cAC7BR,IAAA,CAACJ,IAAI,EAACc,IAAI,CAAEH,KAAK,CAAG,GAAG,CAAG,EAAE,CAAG,EAAG,CAACI,MAAM,CAAE,GAAI,CAACC,KAAK,CAAE,MAAO,CAAAJ,QAAA,CAAEH,CAAC,CAAC,UAAU,CAAC,CAAO,CAAC,CACpF,CAAC,CAwBC,CAAC,CAEpB,CAAC,CACD,GAAM,CAAAQ,UAAU,CAAGlB,MAAM,CAACmB,GAAG,CAAAC,eAAA,GAAAA,eAAA,CAAAC,sBAAA,uOAa5B,CAED,cAAe,CAAAf,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}