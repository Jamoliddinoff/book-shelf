{"ast":null,"code":"var _jsxFileName = \"/Users/macos/MyFolders/projects/smart-base-task/src/companents/CountryAlbum/FullMode.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { ArrowWrapper, CloseWrapper, FullModeWrapper, ImageContainer } from \"./style\";\nimport ArrowIcon from '../../assets/icons/arrow.png';\nimport CloseIcon from '../../assets/icons/close.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FullMode = ({\n  show,\n  handlePicture,\n  closeMode,\n  images\n}) => {\n  _s();\n  const [image, setImage] = useState(handlePicture);\n  useEffect(() => {\n    setImage(handlePicture);\n  }, [handlePicture]);\n  const handleLeftArrow = () => {\n    const index = (images || []).findIndex(item => item.id === image.id);\n    images[index - 1] && setImage(images[index - 1]);\n    if (index === 0) {\n      setImage(images[images.length - 1]);\n    }\n  };\n  const handleRightArrow = () => {\n    const index = (images || []).findIndex(item => item.id === image.id);\n    images[index + 1] && setImage(images[index + 1]);\n    if (index === images.length - 1) {\n      setImage(images[0]);\n    }\n  };\n  return show ? /*#__PURE__*/_jsxDEV(FullModeWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(ArrowWrapper, {\n      onClick: handleLeftArrow,\n      style: {\n        marginLeft: 30\n      },\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: ArrowIcon,\n        alt: 'arrow'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(ImageContainer, {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: image === null || image === void 0 ? void 0 : image.img,\n        alt: image === null || image === void 0 ? void 0 : image.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(ArrowWrapper, {\n      style: {\n        transform: 'rotate(180deg)'\n      },\n      onClick: handleRightArrow,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: ArrowIcon,\n        alt: 'arrow'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(CloseWrapper, {\n      onClick: () => closeMode(false),\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: CloseIcon,\n        alt: 'close'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 13\n  }, this) : null;\n};\n_s(FullMode, \"nqdHqDuuS6OieO6VJqIf2kFwAkc=\");\n_c = FullMode;\nexport default FullMode;\nvar _c;\n$RefreshReg$(_c, \"FullMode\");","map":{"version":3,"names":["React","useEffect","useState","ArrowWrapper","CloseWrapper","FullModeWrapper","ImageContainer","ArrowIcon","CloseIcon","jsxDEV","_jsxDEV","FullMode","show","handlePicture","closeMode","images","_s","image","setImage","handleLeftArrow","index","findIndex","item","id","length","handleRightArrow","children","onClick","style","marginLeft","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","img","name","transform","_c","$RefreshReg$"],"sources":["/Users/macos/MyFolders/projects/smart-base-task/src/companents/CountryAlbum/FullMode.js"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {ArrowWrapper, CloseWrapper, FullModeWrapper, ImageContainer} from \"./style\";\nimport ArrowIcon from '../../assets/icons/arrow.png'\nimport CloseIcon from '../../assets/icons/close.png'\n\nconst FullMode = ({show,handlePicture,closeMode,images}) => {\n    const [image,setImage] = useState(handlePicture)\n\n    useEffect(()=>{\n        setImage(handlePicture)\n    },[handlePicture])\n\n    const handleLeftArrow = () =>{\n        const index = (images||[]).findIndex(item => item.id === image.id);\n        images[index-1] && setImage(images[index-1]);\n        if(index === 0) {\n            setImage(images[images.length - 1])\n        }\n    }\n    const handleRightArrow = () =>{\n        const index = (images||[]).findIndex(item => item.id === image.id);\n        images[index+1] && setImage(images[index+1]);\n        if(index === images.length - 1) {\n            setImage(images[0])\n        }\n    }\n    return ( show ?\n            <FullModeWrapper>\n                <ArrowWrapper onClick={handleLeftArrow} style={{marginLeft:30}}>\n                    <img src={ArrowIcon} alt={'arrow'}/>\n                </ArrowWrapper>\n                <ImageContainer>\n                    <img src={image?.img} alt={image?.name}/>\n                </ImageContainer>\n                <ArrowWrapper style={{transform:'rotate(180deg)'}} onClick={handleRightArrow}>\n                    <img src={ArrowIcon} alt={'arrow'}/>\n                </ArrowWrapper>\n                <CloseWrapper onClick={()=>closeMode(false)}>\n                    <img src={CloseIcon} alt={'close'}/>\n                </CloseWrapper>\n            </FullModeWrapper>\n            :null\n    );\n};\n\nexport default FullMode;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}