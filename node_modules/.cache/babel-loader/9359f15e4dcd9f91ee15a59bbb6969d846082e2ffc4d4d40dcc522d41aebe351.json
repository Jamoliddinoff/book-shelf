{"ast":null,"code":"import{createSlice}from'@reduxjs/toolkit';import{countries,countriesEn,countriesRu}from\"../mocData\";var getLang=JSON.parse(localStorage.getItem('lang'));var getDefaultCountries=function getDefaultCountries(){if(getLang===\"ru\"){return countriesRu;}if(getLang===\"en\"){return countriesEn;}else{return countries;}};var initialState={lang:getLang||'uz',countries:getDefaultCountries()};export var languageSlice=createSlice({name:'lang',initialState:initialState,reducers:{setLang:function setLang(state,action){state.lang=action.payload;if(action.payload==='uz'){state.countries=countries;}if(action.payload==='en'){state.countries=countriesEn;}if(action.payload==='ru'){state.countries=countriesRu;}}}});// Action creators are generated for each case reducer function\nvar setLang=languageSlice.actions.setLang;export{setLang};export default languageSlice.reducer;","map":{"version":3,"names":["createSlice","countries","countriesEn","countriesRu","getLang","JSON","parse","localStorage","getItem","getDefaultCountries","initialState","lang","languageSlice","name","reducers","setLang","state","action","payload","actions","reducer"],"sources":["/Users/macos/MyFolders/projects/smart-base-task/src/store/languageSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\nimport {countries, countriesEn, countriesRu} from \"../mocData\";\n\nconst getLang = JSON.parse(localStorage.getItem('lang'));\nconst getDefaultCountries = () => {\n    if (getLang === \"ru\"){\n        return countriesRu\n    }\n    if (getLang === \"en\"){\n        return countriesEn\n    }\n    else {\n        return countries\n    }\n}\nconst initialState = {\n    lang: getLang ||'uz',\n    countries: getDefaultCountries()\n}\n\nexport const languageSlice = createSlice({\n    name: 'lang',\n    initialState,\n    reducers: {\n        setLang: (state,action) => {\n            state.lang = action.payload\n            if (action.payload === 'uz'){\n                state.countries = countries\n            }\n            if (action.payload === 'en'){\n                state.countries = countriesEn\n            }\n            if (action.payload === 'ru'){\n                state.countries = countriesRu\n            }\n        },\n    },\n})\n\n// Action creators are generated for each case reducer function\nexport const { setLang } = languageSlice.actions\n\nexport default languageSlice.reducer\n"],"mappings":"AAAA,OAASA,WAAW,KAAQ,kBAAkB,CAC9C,OAAQC,SAAS,CAAEC,WAAW,CAAEC,WAAW,KAAO,YAAY,CAE9D,GAAM,CAAAC,OAAO,CAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,CACxD,GAAM,CAAAC,mBAAmB,CAAG,QAAtB,CAAAA,mBAAmBA,CAAA,CAAS,CAC9B,GAAIL,OAAO,GAAK,IAAI,CAAC,CACjB,MAAO,CAAAD,WAAW,CACtB,CACA,GAAIC,OAAO,GAAK,IAAI,CAAC,CACjB,MAAO,CAAAF,WAAW,CACtB,CAAC,IACI,CACD,MAAO,CAAAD,SAAS,CACpB,CACJ,CAAC,CACD,GAAM,CAAAS,YAAY,CAAG,CACjBC,IAAI,CAAEP,OAAO,EAAG,IAAI,CACpBH,SAAS,CAAEQ,mBAAmB,CAAC,CACnC,CAAC,CAED,MAAO,IAAM,CAAAG,aAAa,CAAGZ,WAAW,CAAC,CACrCa,IAAI,CAAE,MAAM,CACZH,YAAY,CAAZA,YAAY,CACZI,QAAQ,CAAE,CACNC,OAAO,CAAE,SAAAA,QAACC,KAAK,CAACC,MAAM,CAAK,CACvBD,KAAK,CAACL,IAAI,CAAGM,MAAM,CAACC,OAAO,CAC3B,GAAID,MAAM,CAACC,OAAO,GAAK,IAAI,CAAC,CACxBF,KAAK,CAACf,SAAS,CAAGA,SAAS,CAC/B,CACA,GAAIgB,MAAM,CAACC,OAAO,GAAK,IAAI,CAAC,CACxBF,KAAK,CAACf,SAAS,CAAGC,WAAW,CACjC,CACA,GAAIe,MAAM,CAACC,OAAO,GAAK,IAAI,CAAC,CACxBF,KAAK,CAACf,SAAS,CAAGE,WAAW,CACjC,CACJ,CACJ,CACJ,CAAC,CAAC,CAEF;AACO,GAAQ,CAAAY,OAAO,CAAKH,aAAa,CAACO,OAAO,CAAjCJ,OAAO,CAA0B,OAAAA,OAAA,EAEhD,cAAe,CAAAH,aAAa,CAACQ,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}