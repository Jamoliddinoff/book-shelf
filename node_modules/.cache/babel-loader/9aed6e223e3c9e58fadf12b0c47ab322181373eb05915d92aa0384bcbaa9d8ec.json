{"ast":null,"code":"import axios from 'axios';\nimport { BASE_URL, DEFAULT_HEADERS } from '../constants';\nimport { store } from '../store';\nimport md5 from 'md5';\nconst httpClient = axios.create({\n  baseURL: BASE_URL\n});\nhttpClient.interceptors.response.use(response => {\n  console.log('RESPONSE: ', response);\n  return response;\n}, error => {\n  console.log('error ====>', error);\n  // store.dispatch(setAlertAction({ type: 'error', message: error?.message }));\n  let status = error.response && error.response.status || 0;\n  if (status === 401) {\n    //clear access token\n    console.log('status ====>', error);\n\n    // RootNavigation.navigate(NAVIGATORS.LOGIN);\n    return Promise.reject('login or password invalid');\n  }\n  return Promise.reject(error);\n});\nhttpClient.interceptors.request.use(async config => {\n  let _access_token;\n  // try {\n  //     let token = await AsyncStorage.getItem('@token');\n  //     // const { access_token } = JSON.parse(token) || null;\n  //     _access_token = (await JSON.parse(token)) || null;\n  // } catch (error) {\n  //     console.log(error);\n  //     _access_token = null;\n  // }\n  console.log('configgggggg-', store.getState().auth.user);\n  console.log('config-', config);\n  const user = store.getState().auth.user;\n  console.log(pm.request.url.getPath());\n  if (config.url.getPath() == \"/signup\") {\n    let body = JSON.parse(pm.request.body);\n    config.collectionVariables.set(\"key\", body.key);\n    config.collectionVariables.set(\"secret\", body.secret);\n    console.log(\"updated key and secret: \" + body.key + ' ' + body.secret);\n  } else {\n    let signstr = pm.request.method + config.request.url.getPathWithQuery() + config.request.body + config.collectionVariables.get(\"secret\");\n    let sign = signature = md5(signstr).toString();\n    console.log(\"signstr: \" + signstr);\n    console.log(\"sign: \" + sign);\n    config.collectionVariables.set(\"sign\", sign);\n  }\n  if (user) {\n    const sign = config.method + config.baseURL + config.url + (config.data ? JSON.stringify(config.data) : '') + user.secret;\n    console.log('signnnnn', sign);\n    config.headers = Object.assign(config.headers, {\n      'Content-Type': 'application/json',\n      Key: user.key,\n      Sign: md5(sign).toString()\n    });\n    return config;\n  } else {\n    config.headers = Object.assign(config.headers, {\n      'Content-Type': 'application/json'\n    });\n    return config;\n  }\n});\nexport const httpGet = (url, params) => httpClient(url, {\n  method: 'get',\n  ...params\n});\nexport const httpPost = (url, params) => httpClient(url, {\n  method: 'post',\n  ...params\n});\nexport const httpPut = (url, params) => httpClient(url, {\n  method: 'put',\n  ...params\n});\nexport const httpPatch = (url, params) => httpClient(url, {\n  method: 'patch',\n  ...params\n});\nexport const httpDelete = (url, params) => httpClient(url, {\n  method: 'delete',\n  ...params\n});","map":{"version":3,"names":["axios","BASE_URL","DEFAULT_HEADERS","store","md5","httpClient","create","baseURL","interceptors","response","use","console","log","error","status","Promise","reject","request","config","_access_token","getState","auth","user","pm","url","getPath","body","JSON","parse","collectionVariables","set","key","secret","signstr","method","getPathWithQuery","get","sign","signature","toString","data","stringify","headers","Object","assign","Key","Sign","httpGet","params","httpPost","httpPut","httpPatch","httpDelete"],"sources":["/Users/macos/MyFolders/projects/smart-base-task/src/api/index.js"],"sourcesContent":["import axios from 'axios';\nimport { BASE_URL, DEFAULT_HEADERS } from '../constants';\nimport { store } from '../store';\nimport md5 from 'md5';\n\nconst httpClient = axios.create({\n    baseURL: BASE_URL,\n});\n\nhttpClient.interceptors.response.use(\n    (response) => {\n        console.log('RESPONSE: ', response);\n        return response;\n    },\n    (error) => {\n        console.log('error ====>', error);\n        // store.dispatch(setAlertAction({ type: 'error', message: error?.message }));\n        let status = (error.response && error.response.status) || 0;\n        if (status === 401) {\n            //clear access token\n            console.log('status ====>', error);\n\n            // RootNavigation.navigate(NAVIGATORS.LOGIN);\n            return Promise.reject('login or password invalid');\n        }\n        return Promise.reject(error);\n    }\n);\n\nhttpClient.interceptors.request.use(async (config) => {\n    let _access_token;\n    // try {\n    //     let token = await AsyncStorage.getItem('@token');\n    //     // const { access_token } = JSON.parse(token) || null;\n    //     _access_token = (await JSON.parse(token)) || null;\n    // } catch (error) {\n    //     console.log(error);\n    //     _access_token = null;\n    // }\n    console.log('configgggggg-',store.getState().auth.user)\n    console.log('config-',config)\n    const user = store.getState().auth.user;\n    console.log(pm.request.url.getPath())\n    if (config.url.getPath()==\"/signup\"){\n        let body = JSON.parse(pm.request.body)\n        config.collectionVariables.set(\"key\", body.key);\n        config.collectionVariables.set(\"secret\", body.secret);\n        console.log(\"updated key and secret: \"+body.key+' '+body.secret)\n    }else{\n        let signstr = pm.request.method+\n            config.request.url.getPathWithQuery()+\n            config.request.body+\n            config.collectionVariables.get(\"secret\")\n        let sign = signature = md5(signstr).toString();\n        console.log(\"signstr: \"+signstr)\n        console.log(\"sign: \"+sign)\n        config.collectionVariables.set(\"sign\",sign)\n    }\n    if (user) {\n        const sign = config.method+config.baseURL+config.url+(config.data?JSON.stringify(config.data):'')+user.secret\n        console.log('signnnnn',sign)\n        config.headers = Object.assign(config.headers, {\n           'Content-Type': 'application/json',\n            Key: user.key,\n            Sign: md5(sign).toString(),\n        });\n        return config;\n    } else {\n        config.headers = Object.assign(config.headers, {\n            'Content-Type': 'application/json',\n        })\n        return config;\n    }\n});\n\nexport const httpGet = (url, params) => httpClient(url, { method: 'get', ...params });\n\nexport const httpPost = (url, params) => httpClient(url, { method: 'post', ...params });\n\nexport const httpPut = (url, params) => httpClient(url, { method: 'put', ...params });\n\nexport const httpPatch = (url, params) => httpClient(url, { method: 'patch', ...params });\n\nexport const httpDelete = (url, params) => httpClient(url, { method: 'delete', ...params });\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}