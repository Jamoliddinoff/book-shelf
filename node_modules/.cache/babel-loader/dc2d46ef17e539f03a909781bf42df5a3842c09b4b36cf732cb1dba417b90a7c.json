{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { countries, countriesEn, countriesRu } from \"../mocData\";\nconst getLang = JSON.parse(localStorage.getItem('lang'));\nconst getDefaultCountries = () => {\n  if (getLang === \"uz\") {\n    return countries;\n  }\n  if (getLang === \"ru\") {\n    return countriesRu;\n  }\n  if (getLang === \"en\") {\n    return countriesEn;\n  }\n};\nconst initialState = {\n  lang: getLang || 'uz',\n  countries: getDefaultCountries()\n};\nexport const languageSlice = createSlice({\n  name: 'lang',\n  initialState,\n  reducers: {\n    setLang: (state, action) => {\n      state.lang = action.payload;\n      if (action.payload === 'uz') {\n        state.countries = countries;\n      }\n      if (action.payload === 'en') {\n        state.countries = countriesEn;\n      }\n      if (action.payload === 'ru') {\n        state.countries = countriesRu;\n      }\n    }\n  }\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  setLang\n} = languageSlice.actions;\nexport default languageSlice.reducer;","map":{"version":3,"names":["createSlice","countries","countriesEn","countriesRu","getLang","JSON","parse","localStorage","getItem","getDefaultCountries","initialState","lang","languageSlice","name","reducers","setLang","state","action","payload","actions","reducer"],"sources":["/Users/macos/MyFolders/projects/smart-base-task/src/store/languageSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\nimport {countries, countriesEn, countriesRu} from \"../mocData\";\n\nconst getLang = JSON.parse(localStorage.getItem('lang'));\nconst getDefaultCountries = () => {\n    if (getLang === \"uz\"){\n        return countries\n    }\n    if (getLang === \"ru\"){\n        return countriesRu\n    }\n    if (getLang === \"en\"){\n        return countriesEn\n    }\n}\nconst initialState = {\n    lang: getLang ||'uz',\n    countries: getDefaultCountries()\n}\n\nexport const languageSlice = createSlice({\n    name: 'lang',\n    initialState,\n    reducers: {\n        setLang: (state,action) => {\n            state.lang = action.payload\n            if (action.payload === 'uz'){\n                state.countries = countries\n            }\n            if (action.payload === 'en'){\n                state.countries = countriesEn\n            }\n            if (action.payload === 'ru'){\n                state.countries = countriesRu\n            }\n        },\n    },\n})\n\n// Action creators are generated for each case reducer function\nexport const { setLang } = languageSlice.actions\n\nexport default languageSlice.reducer\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAAQC,SAAS,EAAEC,WAAW,EAAEC,WAAW,QAAO,YAAY;AAE9D,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;AACxD,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;EAC9B,IAAIL,OAAO,KAAK,IAAI,EAAC;IACjB,OAAOH,SAAS;EACpB;EACA,IAAIG,OAAO,KAAK,IAAI,EAAC;IACjB,OAAOD,WAAW;EACtB;EACA,IAAIC,OAAO,KAAK,IAAI,EAAC;IACjB,OAAOF,WAAW;EACtB;AACJ,CAAC;AACD,MAAMQ,YAAY,GAAG;EACjBC,IAAI,EAAEP,OAAO,IAAG,IAAI;EACpBH,SAAS,EAAEQ,mBAAmB,CAAC;AACnC,CAAC;AAED,OAAO,MAAMG,aAAa,GAAGZ,WAAW,CAAC;EACrCa,IAAI,EAAE,MAAM;EACZH,YAAY;EACZI,QAAQ,EAAE;IACNC,OAAO,EAAEA,CAACC,KAAK,EAACC,MAAM,KAAK;MACvBD,KAAK,CAACL,IAAI,GAAGM,MAAM,CAACC,OAAO;MAC3B,IAAID,MAAM,CAACC,OAAO,KAAK,IAAI,EAAC;QACxBF,KAAK,CAACf,SAAS,GAAGA,SAAS;MAC/B;MACA,IAAIgB,MAAM,CAACC,OAAO,KAAK,IAAI,EAAC;QACxBF,KAAK,CAACf,SAAS,GAAGC,WAAW;MACjC;MACA,IAAIe,MAAM,CAACC,OAAO,KAAK,IAAI,EAAC;QACxBF,KAAK,CAACf,SAAS,GAAGE,WAAW;MACjC;IACJ;EACJ;AACJ,CAAC,CAAC;;AAEF;AACA,OAAO,MAAM;EAAEY;AAAQ,CAAC,GAAGH,aAAa,CAACO,OAAO;AAEhD,eAAeP,aAAa,CAACQ,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}